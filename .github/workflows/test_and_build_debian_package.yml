name: Build and Release

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - '*'

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest setuptools wheel

    - name: Install Package in Editable Mode
      run: |
        # Установка пакета в режиме разработки для доступности модулей
        pip install -e .

    - name: Version Check
      run: |
        version=$(python setup.py --version | tr -d '[:space:]')
        echo "Version is $version"

    - name: Run Tests
      run: pytest tests/

    - name: Build Debian Package
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        version=$(python setup.py --version | tr -d '[:space:]')
        echo "Building Debian package version $version..."
        # dpkg-deb --build my_package/ debian_package_${version}.deb
        echo "::set-output name=package_name::debian_package_${version}.deb"

  release:
    runs-on: ubuntu-latest
    needs: test_and_build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create Git Tag
      run: |
        version="v${{ needs.test_and_build.outputs.version }}"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "$version" -m "Release $version"
        git push origin "$version" --force

    - name: Release on GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: debian_package_${{ needs.test_and_build.outputs.package_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
