name: Test and Build Debian Package

# Trigger workflow only on pull requests for any branch
on:
  pull_request:
    branches:
      - '**'

jobs:
  test:
    # Define the environment for the test job
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Install necessary dependencies for running tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Step 4: Run tests
      - name: Run Tests
        run: |
          export PYTHONPATH="${{ github.workspace }}:${PYTHONPATH}"
          pytest tests/

  build:
    # Define the environment for the build job
    runs-on: ubuntu-latest
    needs: test  # Ensure build only runs after successful test completion
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Install dependencies required for building the package
      - name: Install dependencies for build
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel  # Install setuptools to use setup.py

      # Step 4: Extract the version from setup.py and save it as an environment variable
      - name: Extract version from setup.py
        id: get_version
        run: |
          # Retrieve the version from setup.py
          version=$(python setup.py --version)
          echo "Package version: $version"
          echo "version=$version" >> $GITHUB_ENV

      # Step 5: Build the Debian package with the extracted version
      - name: Build .deb package
        run: |
          mkdir -p debian_package/DEBIAN
          echo "Package: fastmodbuslibrary" > debian_package/DEBIAN/control
          echo "Version: ${{ env.version }}" >> debian_package/DEBIAN/control
          echo "Section: base" >> debian_package/DEBIAN/control
          echo "Priority: optional" >> debian_package/DEBIAN/control
          echo "Architecture: all" >> debian_package/DEBIAN/control
          echo "Maintainer: Aleksandr Degtyarev <adegtyarev.ap@gmail.com>" >> debian_package/DEBIAN/control
          echo "Description: Fast Modbus Python Library" >> debian_package/DEBIAN/control
          python setup.py install --root=debian_package/usr/local
          dpkg-deb --build debian_package

      # Step 6: Upload the Debian package as an artifact for later use
      - name: Upload Debian Package
        uses: actions/upload-artifact@v3
        with:
          name: debian-package
          path: debian_package.deb
