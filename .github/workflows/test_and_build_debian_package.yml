name: Build and Release

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Dependencies
      run: |
        pip install setuptools wheel
        pip install -r requirements.txt
        pip install pytest

    - name: Install Package in Editable Mode
      run: |
        # Install the package in editable mode to make modules accessible
        pip install -e .

    - name: Run Tests
      # Temporarily add current directory to PYTHONPATH for testing
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: pytest tests/

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Dependencies for Package Creation
      run: |
        pip install setuptools wheel
        sudo apt-get update
        sudo apt-get install -y ruby ruby-dev rubygems build-essential
        sudo gem install --no-document fpm

    - name: Build Debian Package
      id: build_package
      run: |
        version=$(python setup.py --version | tr -d '[:space:]')
        echo "Building Debian package version $version..."
        fpm -s python -t deb setup.py --python-bin python3 --name fastmodbuslibrary --version $version
        echo "::set-output name=package_name::fastmodbuslibrary_${version}_all.deb"

    - name: Create Git Tag
      id: create_tag  # ID to pass the tag output to the release step
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          version="prv${{ github.event.pull_request.number }}"
          # Delete existing tag if it exists
          git push --delete origin "$version" || true
          git tag -d "$version" || true
        else
          version="v${{ needs.test.outputs.version }}"
        fi
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "$version" -m "Release $version"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} "$version" --force
        echo "::set-output name=tag::$version"

    - name: Release on GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.build_package.outputs.package_name }}
        tag_name: ${{ steps.create_tag.outputs.tag }}
        name: Release ${{ steps.create_tag.outputs.tag }}
        draft: false
        prerelease: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
